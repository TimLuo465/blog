<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.5.3" created="2017-04-22 05:02" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>大熊</title>
	<link>http://www.frontend.ren</link>
	<description>千山乱雪</description>
	<pubDate>Sat, 22 Apr 2017 05:02:15 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.frontend.ren</wp:base_site_url>
	<wp:base_blog_url>http://www.frontend.ren</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[timluo]]></wp:author_login><wp:author_email><![CDATA[1664311406@qq.com]]></wp:author_email><wp:author_display_name><![CDATA[timluo]]></wp:author_display_name><wp:author_first_name><![CDATA[罗振]]></wp:author_first_name><wp:author_last_name><![CDATA[罗]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=4.5.3</generator>

<image>
	<url>http://www.frontend.ren/wp-content/uploads/2016/03/QQ图片20160315231613-150x150.jpg</url>
	<title>大熊</title>
	<link>http://www.frontend.ren</link>
	<width>32</width>
	<height>32</height>
</image> 

	<item>
		<title>设置wordpress ICP</title>
		<link>http://www.frontend.ren/2016/03/14/set-wordpress-icp/</link>
		<pubDate>Mon, 14 Mar 2016 15:10:59 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[<p>wordpress在3.7以后支持ICP选项，但是only for 默认的主题。</p>
<p>好吧，只能自行添加这段代码来添加ICP了。<!--more--></p>
<code lang="php"><a href="http://www.miitbeian.gov.cn/" rel="nofollow" target="_blank">
<?php echo get_option( 'zh_cn_l10n_icp_num' );?>
</a></code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 23:10:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 15:10:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[set-wordpress-icp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="wordpress"><![CDATA[WordPress]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[32890]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[设置wordpress ICP 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[设置wordpress ICP 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_user_liked]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_like_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[设置wordpress ICP 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e8%ae%be%e7%bd%aewordpress-icp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>按Enter键后Form表单自动提交的问题</title>
		<link>http://www.frontend.ren/2016/03/15/the-question-of-auto-submit-in-form/</link>
		<pubDate>Tue, 15 Mar 2016 15:50:01 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[<p>无意中在input文本框中按下了enter键，不料页面竟然刷新了一下。(尼玛，bug呀!)</p>
<p>好吧，只能动手找找原因了。以下省略一万个字。。。。<!--more--></p>
<blockquote>
<p><strong>主要原因是</strong>当表单中只有一个input输入元素时，点击enter键，form表单会自动提交。</p>
</blockquote>
<p>显而易见，从不同角度下手，solution还是有很多的。</p>
<ol>
	<li>多加一个input元素设置display:none。</li>
	<li>利用事件阻止表单提交。</li>
	<li>等等。。。。</li>
</ol>
<p>我的思路呢，是利用事件来做的，没什么别的理由，因为适合。</p>
<p><code lang="html">
<form onsubmit="return false">
     <input type="text" name="test"/>
</form>
</code></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2016-03-15 23:50:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-15 15:50:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-question-of-auto-submit-in-form]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="html"><![CDATA[Html]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[38878]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[按enter键后form表单自动提交的问题]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[按enter键后form表单自动提交的问题]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e6%8c%89enter%e9%94%ae%e5%90%8eform%e8%a1%a8%e5%8d%95%e8%87%aa%e5%8a%a8%e6%8f%90%e4%ba%a4%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Html tabindex详解</title>
		<link>http://www.frontend.ren/2016/03/16/html-tabindex-detail/</link>
		<pubDate>Tue, 15 Mar 2016 16:22:42 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><strong>用法和定义</strong></p>
</blockquote>
<p>tabindex 属性规定元素的 tab 键控制次序（当 tab 键用于导航时）。<!--more--></p>
<blockquote>
<p><strong>适用元素</strong></p>
</blockquote>
<p>&lt;a&gt;, &lt;area&gt;, &lt;button&gt;, &lt;input&gt;, &lt;object&gt;, &lt;select&gt; 以及 &lt;textarea&gt;。</p>
<blockquote>
<p><strong>语法</strong></p>
</blockquote>
<p><code lang="html"><element tabindex="number"></code></p>
<p><strong>number</strong>: 规定元素的 tab 键控制次序（1 是第一个，<span style="color: #333300;"><strong>取值范围</strong></span>是[1~32767]）。</p>
<blockquote>
<p><strong>Tip</strong></p>
</blockquote>
<ol>
	<li>将元素的tabindex设置为<span style="color: #ff6600;">'-1'<span style="color: #000000;">，按下Tab键时该元素就不能获得焦点。</span></span></li>
	<li>当元素使用tabindex后，点击该元素，元素周围会出现边框(又一个bug 8-O )。对此我表示别用tabindex了。</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date><![CDATA[2016-03-16 00:22:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-15 16:22:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[html-tabindex-detail]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="html"><![CDATA[Html]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[39780]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[html tabindex frontend 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[html tabindex frontend 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[html-tabindex%e8%af%a6%e8%a7%a3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jquery将滚动条滚动到指定的位置</title>
		<link>http://www.frontend.ren/2016/03/18/%e5%b0%86scroll%e6%bb%9a%e5%8a%a8%e5%88%b0%e6%8c%87%e5%ae%9a%e7%9a%84%e4%bd%8d%e7%bd%ae/</link>
		<pubDate>Thu, 17 Mar 2016 16:29:09 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[<p>这个问题解决起来并不困难，但前提是需要对scroll和元素的各种距离的属性有一定的了解。<!--more--></p>
<blockquote>
<p><span style="color: #333333;"><strong>scrollTop()</strong></span></p>
</blockquote>
<h4><strong>定义和用法</strong></h4>
<p>jquery中scrollTop()即可以用于设置匹配元素的滚动条的垂直偏移，也可以用于读取匹配元素集合的第一个元素的滚动条的垂直偏移。</p>
<ul>
	<li><span style="color: #333300;">$(ele).scrollTop(value)</span>  value为设置的垂直偏移量。</li>
	<li><span style="color: #333300;">$(ele).scrollTop()</span> 可以得到垂直偏移量。</li>
</ul>
<h4><strong>深入了解</strong></h4>
<p>关于scrollTop的工作原理，主要有两点:</p>
<ol>
	<li>当value没有值时，则读取元素的垂直偏移量，大致逻辑如下:<br />
 <code lang="javascript"> 
// 判断value是否有值且是否为window或document对象 
if( value === undefined &amp;&amp; win) {    
  if("pageYOffset" in window){         
    return window["pageYOffset"]     
  } else {     
    return jQuery.support.boxModel ? 
      document.documentElement["scrollTop"] : win.document.body["scrollTop"]     
  } 
} else {    
  return ele["scrollTop"] 
} </code>以上是缩减的版本，只是简单阐述了jquery在没有value的情况下是怎么样取得元素的垂直偏移量。</li>
	<li>当value有值的情况下:
<ol style="list-style-type: lower-alpha;">
	<li>如果是window或document对象，则直接调用window.scrollTo(x, y)滚动到指定的位置。</li>
	<li>如果不是则遍历匹配元素集合，并设置每个元素的滚动偏移值。</li>
</ol>
</li>
</ol>
<blockquote>
<p><span style="color: #333333; font-weight: bold;">offset()</span></p>
</blockquote>
<h4><strong>定义和用法</strong></h4>
<h4><strong><span style="color: #808080;">    offset()</span></strong></h4>
<p>      返回匹配元素集合中的第一个元素文档坐标。</p>
<p><span style="color: #808080; font-weight: bold;">    offset( [options] )</span></p>
<p>      设置每个匹配元素的文档坐标，参数options含有属性top或left对象，属性值是数值。例如$(ele).offset().top或者$(ele).offset({top: value})</p>
<h4><strong>深入了解<br />
 </strong></h4>
<p>    关于读取元素文档坐标，jquery会优先调用getBoundingClientRect()，说到getBoundingClientRect，有必要知道点。</p>
<p><span style="color: #333300;"><strong><span style="color: #333333;">getBoundingClientRect</span> </strong></span>返回的是一个矩形对象，并包含有四个属性top,left,bottom,right。</p>
<p><code lang="javascript"> 
var rect = document.getElementById('element').getBoundingClientRect(); 
console.log(rect.top); // 元素上边距离页面上边的距离 
console.log(rect.bottom); // 元素下边距离页面上边的距离 
console.log(rect.left); // 元素左边距离页面左边的距离 
console.log(rect.right); // 元素右边距离页面左边的距离 
</code></p>
<p>对于浏览器兼容性来说，getBoundingClientRect还是很不错的。<span style="color: #473d3f;">不过需要注意的是</span><span style="color: #1f070c;">在IE中，在未添加到文档中的元素上调用方法getBoundingClientRect会抛出异常</span>。</p>
<p>好吧我承认啰嗦了半天都没有进入主题，这是毛病得改。。</p>
<blockquote>
<p><strong>将滚动条移动到指定位置</strong></p>
</blockquote>
<p>其实经过以上的分析，已经不难得出解决方案了。</p>
<p><code lang="javascript">
var container = $(container),
    element = $(element);
$(container).scrollTop( $(element).offset().top - $(container).offset().top + $(container).scrollTop() );
</code></p>
<p><strong><span style="color: #993300;">计算的规则是: 元素距离窗口上坐标 - 容器距离窗口上坐标 + 容器的垂直偏移量。</span></strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2016-03-18 00:29:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-17 16:29:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%b0%86scroll%e6%bb%9a%e5%8a%a8%e5%88%b0%e6%8c%87%e5%ae%9a%e7%9a%84%e4%bd%8d%e7%bd%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[jquery将滚动条滚动到指定的位置 scrollTop offset]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[jquery将滚动条滚动到指定的位置 scrollTop offset]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[jquery将滚动条滚动到指定的位置]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[jquery将滚动条滚动到指定的位置 scrollTop offset]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[36]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[43511]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_user_IP]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:17:"ip-61.152.132.230";s:14:"61.152.132.230";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_like_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.152.132.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-22 11:26:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-22 03:26:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:wink:  :wink:  :wink:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458617208.3130700588226318359375;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458693447.5998189449310302734375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"timluo";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>获得浏览器localStorage的剩余容量</title>
		<link>http://www.frontend.ren/2016/03/20/get-localstorage-size/</link>
		<pubDate>Sun, 20 Mar 2016 05:27:44 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>一、如何获取localStorage的剩余容量</h3><p>在H5大行其道的今天，localStorage(本地存储)对每一个前断攻城师来说都不太陌生。同时localStorage也给我们带来了极大的便利，不用于cookies的小家子气，localStorage的存储量还是很客观的。<!--more--></p><p>由于浏览器的差异性，导致我们需要对localStorage中的内容做出一部分取舍。而根据目前的市场上浏览器对loaclStorage的兼容性来看，最佳的大小是<span style="color: #ff0000;">2.5M</span>左右。如何得到localStorage的容量大小，大概接触过localStorage都会遇到的这么一个问题。</p><p><strong>localStorage </strong>中存储的是字符串，根据这一条件，我们可以通过取出所有的localStorage的内容，而其长度就是大小。具体代码如下:</p><code lang="javascript">(function(){
     if(!window.localStorage) {
         console.log('浏览器不支持localStorage');
     }
     var size = 0;
     for(item in window.localStorage) {
         if(window.localStorage.hasOwnProperty(item)) {
             size += window.localStorage.getItem(item).length;
         }
     }
     console.log('当前localStorage剩余容量为' + (size / 1024).toFixed(2) + 'KB');
 })()</code><h3>二、如何获取localStorage最大容量</h3><p>通过上面的分析，其实思路基本是一样的，都是通过字符长度来判断。废话不多说，贴码:</p><code lang="javascript"> (function() {
    if(!window.localStorage) {
    console.log('当前浏览器不支持localStorage!')
    }    var test = '0123456789';
    var add = function(num) {
      num += num;
      if(num.length == 10240) {
        test = num;
        return;
      }
      add(num);
    }
    add(test);
    var sum = test;
    var show = setInterval(function(){
       sum += test;
       try {
        window.localStorage.removeItem('test');
        window.localStorage.setItem('test', sum);
        console.log(sum.length / 1024 + 'KB');
       } catch(e) {
        console.log(sum.length / 1024 + 'KB超出最大限制');
        clearInterval(show);
       }
    }, 0.1)
  })()</code><p>自己写了一个<a title="测试浏览器localStorage的最大容量" href="http://www.frontend.ren/localstorage/">检测浏览器localStorage的最大容量</a>的页面，麻雀虽小，但五脏俱全 :lol:。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date><![CDATA[2016-03-20 13:27:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-20 05:27:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[get-localstorage-size]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[47063]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[Html5 localStorage 获得浏览器localStorage的剩余容量 获得浏览器localStorage的最大容量]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[Html5 localStorage 获得浏览器localStorage的剩余容量 获得浏览器localStorage的最大容量]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e8%8e%b7%e5%be%97%e6%b5%8f%e8%a7%88%e5%99%a8localstorage%e7%9a%84%e5%89%a9%e4%bd%99%e5%ae%b9%e9%87%8f]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[33]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e8%8e%b7%e5%be%97%e6%b5%8f%e8%a7%88%e5%99%a8localstorage%e7%9a%84%e5%89%a9%e4%bd%99%e5%ae%b9%e9%87%8f-%e8%8e%b7%e5%be%97%e6%b5%8f%e8%a7%88%e5%99%a8localstorage%e7%9a%84%e6%9c%80%e5%a4%a7%e5%ae%b9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_user_IP]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:16:"ip-211.103.26.86";s:13:"211.103.26.86";s:17:"ip-61.152.132.230";s:14:"61.152.132.230";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_like_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.152.132.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-22 11:24:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-22 03:24:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[写的很好！！！学习了，感谢站主分享～ ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458617049.1882760524749755859375;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458693451.844007015228271484375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"timluo";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Enter键跳到下一步的问题</title>
		<link>http://www.frontend.ren/2016/03/27/question-of-auto-next-by-enter/</link>
		<pubDate>Sun, 27 Mar 2016 15:59:40 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><strong>引言</strong></p>
</blockquote>
<p>大致的问题是这样的，focus在input元素中按enter键要跳到<span style="color: #808080;"><strong><em>下一个元素</em></strong></span>上。而下一个元素有这么三种:<!--more--></p>
<ol>
	<li>input输入框，只需要focus。</li>
	<li>select元素，需要展开select元素中的项。</li>
	<li>a元素，button的样式，需要触发功能事件。</li>
</ol>
<blockquote>
<p><strong>吐槽</strong></p>
</blockquote>
<p>问题提出来了，是时候扔一波砖头了。从上面三个问题来看貌似也没有那么难嘛，你看第一个给下一个next元素加个focus事件不就行么。第二个，额。。容我想想，对了! 给select加个size属性。哈哈，我太XX机智了(我不会告诉你我是刚百度来的)。第三个trigger一个click事件不就可以么。看起来问题很快就解决了啊。</p>
<p>好了，看我立马把code给你码来。你瞅瞅，瞅瞅ios上，让你focus，键盘都不弹出来，你让我输什么啊！再瞅瞅select拉得老长，给谁看啊！android上我点next为啥不好使呢，你这写的什么鬼。</p>
<p>以上纯属吐槽，下面才是正文 :lol: </p>
<blockquote>
<p><strong>我是正文，真的！</strong></p>
</blockquote>
<h4>一、第一个问题</h4>
<p>思路是对的，给next元素加focus。在按了go键(相当于PC上的enter)ios上它真能跳到下一个元素上，但是仅仅是跳，并没有focus，只是边上有选中的框。这时候需要用到touchstart事件。</p>
<p><code lang="javascript">
$(element).on("touchstart", function(){   
  $(element).next().focus(); 
}); 
$(element).trigger("touchstart");
</code></p>
<p>运行下看看效果，android上面是好的，再瞅瞅ipad上面好像也可以了，但。。为嘛手机上不行。好吧你没有看错就是不行。</p>
<h4>二、第二个问题</h4>
<p>给select添加size是可以做到展开的效果，但是需要考虑长宽等等因素。其实让select展开来，还是有别的方法的。</p>
<p><code lang="javascript">
var e = document.createEvent("MouseEvents");
e.initMouseEvent("mousedown", true, true, window); 
element.dispatchEvent(e);
</code></p>
<p>上面方法只适合chrome浏览器和android, ipad。iphone手机上再次被<span style="color: #ff0000;">KO</span>!</p>
<h4>三、第三个问题</h4>
<p>这个问题只是trigger一下click事件就好，问题不太大。也就没什么好说的。</p>
<blockquote>
<p><strong>总结</strong></p>
</blockquote>
<p>文章结束还是没能解决在iphone手机上focus弹出键盘的问题，还是想说在webview上控制系统键盘弹出还是相当无奈的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date><![CDATA[2016-03-27 23:59:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-27 15:59:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[question-of-auto-next-by-enter]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[enter%e9%94%ae%e8%b7%b3%e5%88%b0%e4%b8%8b%e4%b8%80%e6%ad%a5%e7%9a%84%e9%97%ae%e9%a2%98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[46952]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript enter event frontend 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript enter event frontend 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[27]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>js一个链式加法引发的思考</title>
		<link>http://www.frontend.ren/2016/03/31/a-chain-adding-function/</link>
		<pubDate>Thu, 31 Mar 2016 15:48:13 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>前言</p>
</blockquote>
<p>起因是碰到这样一道题目，完成一个连加的函数，使得其可以实现如下的要求:</p>
<p><code lang="javascript">
add(1)(2) //3
add(1)(2)(3) //6
var addTwo = add(2);
addTwo //2
addTwo + 5 //7
addTwo(3) //5
addTwo(3)(5) //10</code></p>
<p><!--more--></p>
<blockquote>
<p>分析与思考</p>
</blockquote>
<p>根据这道题目，其实可以很快的想到这是一道闭包的题目，并且add方法中必须返回一个函数。这样才能实现连续调用。初步分析可以一个雏形:</p>
<p><code lang="javascript">
function add(n){
  var fn = function(m) {
   return add(n + m);
  }
  return fn;<br />
}
</code></p>
<p>但是题目中的结果是整数，而上面的返回的是function。要怎样才能让它可以完成累加并且返回一个整数呢？</p>
<p>经过一番折腾，终于找到了这么个神奇的办法，仰天笑三声。</p>
<p>办法很简单其实只需要重写fn的toString或valueOf方法就可以让fn顺利完成累加同时可以返回结果。</p>
<p>所以只需要在fn方法下添加:</p>
<p><code lang="javascript">
fn.toString = function() {
  return n;
 }</code></p>
<p>或者</p>
<p><code lang="javascript">
fn.valueOf = function() {
  return n;
 }</code></p>
<p>好吧，既然问题解决了。那么问题又来了，toString和valueOf都可以解决这个问题，那么他们的区别是什么呢？</p>
<blockquote>
<p>toString和valueOf的区别</p>
</blockquote>
<h4>一、toString</h4>
<p>当对象需要转换为字符串时，会调用它的toString()方法。而默认情况下，每个对象都会从Object上继承到toString()方法。</p>
<p>Function的原型方法中含有toString()，覆盖了Object中的toString()方法，它返回的是当前函数源代码的字符串。</p>
<h4>二、valueOf</h4>
<p><span style="color: #993300;">valueOf()</span>方法用来把对象转换成原始类型的值（数值、字符串和布尔值）。</p>
<p>默认情况下, valueOf() 会被每个对象Object继承。每一个内置对象都会覆盖这个方法为了返回一个合理的值，</p>
<p>如果对象没有原始值，valueOf() 就会返回对象自己。而此时javascript调用的是Objcet的toString()方法。</p>
<h4>三、示例</h4>
<p><code lang="javascript">
function A(){};
A.toString = function() {
  return 1;
}
alert(A); // 1
A.valueOf = function() {
  return 2
};
console.log(A + 2); // 4
"A".toString() // "A"
"A".valueOf() // "A" 这里javascript会在内部调用toString()
</code></p>
<p>上面的示例只是一部分，更多的需要自己去体会，通过自己demo弄清楚toString和valueOf的区别。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date><![CDATA[2016-03-31 23:48:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-31 15:48:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[a-chain-adding-function]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[44806]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[js一个链式加法引发的思考]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[js一个链式加法引发的思考]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A potentially dangerous Request.Path value was detected from the client</title>
		<link>http://www.frontend.ren/2016/04/10/potentially-dangerous-request-path-value-detected-client/</link>
		<pubDate>Sun, 10 Apr 2016 11:47:31 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><strong>Sernario</strong></p>
</blockquote>
<p>在asp.net 4.0项目，URL中含有<span style="color: #808000;">&lt;,&gt;,*,%,&amp;,:,/<span style="color: #000000;">时，页面会抛出apllication error，A potentially dangerous Request.Path value was detected from the client<span style="color: #ff0000;">异常<span style="color: #000000;">。</span></span></span></span><!--more--></p>
<blockquote>
<p><strong>Reason</strong></p>
</blockquote>
<p>asp.net默认的拦截机制，其目的是为了确保URL传输的安全。</p>
<blockquote>
<p><strong>Solution</strong></p>
</blockquote>
<p><strong>1. requestPathInvalidCharacters</strong></p>
<p><code lang="xml"> <system.web>
    <httpRuntime requestPathInvalidCharacters="" />
 <system.web></code></p>
<p>默认都不拦截(&lt;,&gt;,*,%,&amp;,:,/七种特殊字符)，如果需要拦截直接写在""内，以逗号隔开（&amp;lt;,&amp;gt;,*,%,:,&amp;amp;,/）。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date><![CDATA[2016-04-10 19:47:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-10 11:47:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[potentially-dangerous-request-path-value-detected-client]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[A potentially dangerous Request.Path value was detected from the client]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[A potentially dangerous Request.Path value was detected from the client]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[17]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[38946]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于日期控件的那些事</title>
		<link>http://www.frontend.ren/2016/04/13/the-datepicker/</link>
		<pubDate>Wed, 13 Apr 2016 15:43:46 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><strong>背景</strong></p>
</blockquote>
<p>本文讲得不是如何做一个日期控件，而是简单的讲述我的一些经验。大多数的日期控件，都是由一个文本框和一个日历组成，我接下来讲得日期控件也是这一类。<!--more--></p>
<blockquote>
<p><strong>关于Date验证</strong></p>
</blockquote>
<p>貌似Date的验证和日期控件本身没有半毛钱关系，但是这一步又是实际应用中不可或缺的一步。</p>
<p>因为是文本框，所以输入的格式需要format，所以验证可以分为格式验证和日期验证。这也是我的做法。</p>
<p><span style="font-size: 14px; font-weight: bold;">下面是月日年(mm/dd/yyyy)的格式验证：</span></p>
<p><code lang="javascript">
date.match(/(\d\/){2}\d{4}/)
</code></p>
<p><span style="font-size: 14px; font-weight: bold;">日期的验证:</span></p>
<p><code lang="javascript">
!/Invalid|NaN/.test(new Date(date))
</code></p>
<p>这样做的目的可以省去做一些特殊的正则验证，比如月份，日期的处理。这些需求写下来，正则表达式的长度也是比较惊人的。所以<span style="color: #808000;"><strong><span style="font-size: 14px;">简易版的Date验证</span></strong></span>是:</p>
<p><code lang="javascript"> 
function isDate(date) {
    if(date instanceof Date) return true;
    return date.match(/(\d\/){2}\d{4}/) 
      && !/Invalid|NaN/.test(new Date(date)); 
}
</code></p>
<p>上面的Date验证简单易懂，不需要绕多复杂的正则表达式，实乃居家旅行必备啊!</p>
<blockquote>
<p><strong>关于文本输入</strong></p>
</blockquote>
<p>既然是日期控件，那么就存在着输还是不输的选择。</p>
<p><span style="font-size: 14px; font-weight: bold;">不输: </span><span style="font-size: 14px;">给文本框加一个</span><span style="font-size: 14px; font-weight: bold;">readonly</span><span style="font-size: 14px;">的属性，就可以解决</span><span style="font-size: 14px; font-weight: bold;">。</span></p>
<p><span style="font-size: 14px; font-weight: bold;">输:</span><span style="font-size: 14px;"> 并不是一个属性就能解决的，这存在着多个坑爹的问题</span><span style="font-size: 14px;">。比如输入键值类型，输入的日期格式。。</span></p>
<p>如果选择了输，含着泪也要把需求给做完。</p>
<p><code lang="javascript">
$(element).off("input").on("input", function() {
  var that = $(this); 
  var value = that.val(); 
  var formatValue = value.replace(/[^\d]*/g, "");
  var matchValue = value.replace(/^([\d]{2})\d?\/([\d]{2})\d?\/([\d]{4})\d?$/, "$1/$2/$3");
  if (value.match(/^\d\d?\/\d{0,2}(\/\d{0,4})?$/)) {
    if (value.match(/^([1-9]\/|\d?[1-9]\/\d[1-9]?\/)?$/g)) {
      value = value.replace(/(\d?[1-9]\/)/g, function (match) {
        return match.length == 2 ? "0" + match : match;
      });
    that.val(value);
    }
  }
  if (matchValue != value) {
    that.val(matchValue);
  }
  //Format the input value to date format and remove the last '/' of the result
   formateValue = formatValue.replace(/^([\d]{2})([\d][\d]?)([\d]{4})?/g, "$1/$2/$3").replace(/\/$/, "");
   that.val(formateValue.substr(0, 10));
 });
</code></p>
<p>之所以不使用key event，主要是为了兼容移动设备，在部分android上面无法得到keycode的有效值。所以使用了input event，通过format赋值的形式来完成。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date><![CDATA[2016-04-13 23:43:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-13 15:43:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-datepicker]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="html"><![CDATA[Html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[37400]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[关于日期控件的那些事 input date]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[关于日期控件的那些事 input date]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e5%85%b3%e4%ba%8e%e6%97%a5%e6%9c%9f%e6%8e%a7%e4%bb%b6%e7%9a%84%e9%82%a3%e4%ba%9b%e4%ba%8b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[35]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>(0,eval)(&#039;this&#039;)的一些总结</title>
		<link>http://www.frontend.ren/2016/05/03/0evalthis/</link>
		<pubDate>Tue, 03 May 2016 15:30:58 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 style="text-align: justify;">一、Global Object</h3>
<p>    Global Object代表一个全局对象，js中不允许存在独立的函数，变量和常量，它们都是Global Object 的属性和方法，包括内置的属性和方法。但是Global Object实际并不存在，它是由window充当这个角色，并且这个过程是在js首次加载时进行的。<!--more--></p>
<p>    在一个页面中，首次载入js代码时会创建一个全局执行环境，这个全局执行环境的作用域链实际上只有一个对象，即全局对象（window），并用this来引用全局对象。</p>
<h3>二、(0, eval)('this')</h3>
<p>    (0, eval)('this')可以用于获取当前的global object。那么为什么是(0, eval)('this')呢?</p>
<ol>
	<li>先从(0, eval)表达式开始<br />
 表达式中使用了<em>逗号操作符，</em>而逗号操作符会返回表达式的最后一位，即返回的是eval值，不是引用eval。而0则可以是任意字符串或数字，不影响结果。</li>
	<li>再说('this')<br />
 为什么要用'this'，而不是this，因为<em>严格模式</em>下，在匿名函数中的this是undefined。<br />
 <code lang="javascript">
(function(){
'use strict'; 
  console.log(this); // undefined
})() 
</code></li>
</ol>
<h3>三、eval的直接调用和间接调用</h3>
<p>直接调用的概念:</p>
<blockquote>
<p>对eval函数的直接调用，就是表示为一个调用表达式，它满足以下两个条件：</p>
<p>调用表达式中的成员表达式的结果应该是eval引用，而不是值。</p>
<p>以该引用为参数调用抽象操作GetValue的结果，是15.1.2.1中定义的标准的原生函数。</p>
</blockquote>
<p>    简单来说，eval('1+1')是一个直接调用，而(1,eval)('1+1')是一个间接调用。eval('1+1')就是一个调用表达式，包含了一个成员表达式(eval)和一个参数('1+1')。</p>
<p>    相反的，不是直接调用就是间接调用。</p>
<h3>四、window.eval和window.execScript</h3>
<p>    IE浏览器中有一个window.execScript功能。它的定义是"在所提供的语言中执行指定的脚本"，同时在全局范围内允许执行Javascript代码。</p>
<p>    window对象存在属性形式调用eval，这其实也是eval的间接调用，和(0,eval)('this')没什么两样。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date><![CDATA[2016-05-03 23:30:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-03 15:30:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[0evalthis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript eval (0, eval)('this')]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript eval (0, eval)('this')]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[25110]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自定义scrollbar的样式</title>
		<link>http://www.frontend.ren/2016/05/08/custom-scrollbars-in-webkit/</link>
		<pubDate>Sun, 08 May 2016 07:33:04 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>引言</h3>
<p>webkit中支持拥有overflow属性的区域，列表框，下拉菜单，textarea的滚动条自定义样式。通过设置一些简单的样式，就能让你的滚动条变得高大上。<!--more--></p>
<h3>单刀直入</h3>
<p><code lang="css"> 
::-webkit-scrollbar { /* 1 滚动条整体部分*/ } 
::-webkit-scrollbar-button { /* 2 滚动条两端的按钮*/ } 
::-webkit-scrollbar-track { /* 3 滚动条的内层轨道*/ } 
::-webkit-scrollbar-track-piece { /* 4 滚动条除内层方块的内层轨道*/ } 
::-webkit-scrollbar-thumb { /* 5 滚动条内滑动的方块*/ } 
::-webkit-scrollbar-corner { /* 6 x,y轴滚动条交汇处的边角*/ } 
::-webkit-resizer { /* 7 x,y轴滚动条交汇处调正大小的控件，类似于textarea调整大小的倒三角*/ } 
</code></p>
<p><img class="alignnone size-full wp-image-9222" title="scrollbarparts" src="/wp-includes/assets/img/scrollbarparts.png" sizes="(max-width: 570px) 100vw, 570px" srcset="https://css-tricks.com/wp-content/uploads/2011/05/scrollbarparts.png 570w, https://css-tricks.com/wp-content/uploads/2011/05/scrollbarparts-300x235.png 300w" alt="" width="570" height="448" /></p>
<p>一个简单的demo可以让你更容易上手，明白这些伪类都有着什么样的作用。</p>
<p><code lang="css">
::-webkit-scrollbar { width: 12px; }
::-webkit-scrollbar-track { 
  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
  border-radius: 10px; 
}
::-webkit-scrollbar-thumb { 
  border-radius: 10px; 
  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
}
</code></p>
<p>当然，webkit同样有着一些伪类可以应用在这些样式上面。</p>
<blockquote>
<p><strong>:horizontal </strong>适用于水平位置的滚动条。</p>
<p><strong>:vertical </strong>适用于垂直位置的滚动条。</p>
<p><strong>:decrement </strong>适用于按钮和轨道碎片。表示递减的按钮或轨道碎片，例如可以使区域向上或者向右移动的区域和按钮。</p>
<p><strong>:increment </strong>适用于按钮和轨道碎片。表示递增的按钮或轨道碎片，例如可以使区域向下或者向左移动的区域和按钮。</p>
<p><strong>:start </strong>适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的前面。</p>
<p><strong>:end </strong>适用于按钮和轨道碎片。表示对象（按钮 轨道碎片）是否放在滑块的后面。</p>
<p><strong>:double-button </strong>适用于按钮和轨道碎片。判断轨道结束的位置是否是一对按钮。也就是轨道碎片紧挨着一对在一起的按钮。</p>
<p><strong>:single-button </strong>适用于按钮和轨道。判断轨道结束的位置是否是一对按钮。也就是轨道紧挨着一对在一起的按钮。</p>
<p><strong>:no-button</strong> 适用于轨道和是否运行轨道片的滚动条，即边缘，轨道结束的位置没有按钮。</p>
<p><strong>:corner-present </strong>适用于所有滚动条，表示是否存在滚动条的角落。</p>
<p><strong>:window-inactive </strong>适用于按钮和轨道。判断轨道结束的位置是否是一个按钮。也就是轨道紧挨着一个单独的按钮。</p>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date><![CDATA[2016-05-08 15:33:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-08 07:33:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[custom-scrollbars-in-webkit]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[22197]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[webkit scrollbar css3 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[webkit scrollbar css3 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[29]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>javascript之数组的合并</title>
		<link>http://www.frontend.ren/2016/05/16/concat-array-for-javascript/</link>
		<pubDate>Mon, 16 May 2016 14:03:32 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[<h4><strong>开胃菜</strong></h4>
<p>  在js中，合并数组有一个现成的方法<span style="font-size: 14px;"><strong>concat</strong>, <span style="font-size: 16px;">它的作用便是连接多个数组，并产生一个新的数组。</span></span><!--more--></p>
<p>  当然，你也可以不传数组，传数组元素，一样也是可以的。</p>
<p><code lang="javascript">
var a = [], b = [1,2,3,4,5];
console.log(a.concat(1,2,3,4,5)); // [1,2,3,4,5]
console.log(a.concat(b, b)); // [1,2,3,4,5,1,2,3,4,5]
</code></p>
<h4><strong>主菜</strong></h4>
<p>  上面说得的是正常情况下合并数组采取的方法，那当合并的数组过大，而<span style="font-size: 14px;"><strong>concat</strong><span style="font-size: 16px;">方法已经不太适用。因为生成新的arrayObject也是要占用内存滴๛ก(ｰ̀ωｰ́ก)。</span></span></p>
<p>  那么用什么方法能够解决这么个问题呢？</p>
<p>  没错，就是<span style="font-size: 14px;"><strong>push</strong><span style="font-size: 16px;">，</span><span style="font-size: 16px;">使用<span style="font-size: 14px;"><strong>push</strong></span></span><span style="font-size: 16px;">可以向数组末尾添加多个元素。利用这一点我们可以完成两个数组的合并。</span></span></p>
<p><code lang="javascript">
var a = [1,2,3,4], b = [5,6,7,8];
a.push.apply(a, b);
console.log(a); // [1,2,3,4,5,6,7,8]
</code></p>
<h4><strong>结语</strong></h4>
<p>  在javascript中，类似这种的小技巧不胜枚举。让人人大开眼界的同时，也让我们对js更加的着迷。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date><![CDATA[2016-05-16 22:03:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-16 14:03:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[concat-array-for-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript concat 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript concat 星辰]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[27]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[16096]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_user_IP]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:17:"ip-61.152.132.230";s:14:"61.152.132.230";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_post_like_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[不想匿名哒哒哒]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.152.132.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-19 15:40:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-19 07:40:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[楼主研究的好深入，这么不常见又有水平的小技巧也能发现，实力一定很强，肯定经常看源码吧？楼主要多分享些。 :oops:]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1463918730.53411388397216796875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"timluo";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1463643639.3951549530029296875;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>windows环境下无法引用node全局安装的模块问题</title>
		<link>http://www.frontend.ren/2016/05/17/the-question-of-import-modules-in-node/</link>
		<pubDate>Tue, 17 May 2016 13:55:12 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[<h4><strong>问题</strong></h4><p>在node项目中，往往需要安装一些依赖的包，通常我们采取全局安装的方式，来减少一些包重复安装带来的烦恼。<!--more--></p><p>但是全局安装后出现无法使用的情况，可能是你NODE_PATH没有设置或者不正确造成的。</p><h4><strong>解决方案</strong></h4><p>那么，什么是NODE_PATH呢？</p><p>NODE_PATH是node<span style="font-size: 14px; color: #808000;">为模块提供寻找路径的一个环境变量<span style="color: #000000; font-size: 16px;">。</span></span><span style="font-size: 14px;"><span style="font-size: 16px;">关于node模块加载策略，</span></span><span style="font-size: 14px; color: #808000;"><span style="color: #000000; font-size: 16px;">可以参考<a href="http://www.infoq.com/cn/articles/nodejs-module-mechanism/" target="_blank">这里</a>。</span></span></p><p>那么，如何配置NODE_PATH呢？</p><p>很简单，只需要在环境变量中新添加一个名为NODE_PATH的变量，值为<span style="color: #808000; font-size: 14px;"><strong>npm</strong><span style="color: #000000; font-size: 16px;">的安装目录，例如:</span></span></p><p><code lang="xml"> C:\Users\XX\AppData\Roaming\npm\node_modules </code></p><p>&nbsp;</p><p><img src="/wp-content/uploads/images/NODE_PATH_CONFIG.png" alt="node path config" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date><![CDATA[2016-05-17 21:55:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-17 13:55:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-question-of-import-modules-in-node]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[15522]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[node]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[node]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[windows环境下无法引用全局安装的模块，可以通过设置NODE_PATH来解决这一问题。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[45]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[windows%e7%8e%af%e5%a2%83%e4%b8%8b%e6%97%a0%e6%b3%95%e5%bc%95%e7%94%a8%e5%85%a8%e5%b1%80%e5%ae%89%e8%a3%85%e7%9a%84%e6%a8%a1%e5%9d%97%e9%97%ae%e9%a2%98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>js event.relatedTarget</title>
		<link>http://www.frontend.ren/2016/05/23/js-event-relatedtarget/</link>
		<pubDate>Sun, 22 May 2016 16:25:29 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><strong>relatedTarget</strong></h3><p>碰巧有用到这个属性，这里就总结一下吧。<!--more--></p><p><span style="font-size: 14px; color: #808000;"><strong>relatedTarget</strong></span>属性适用于<strong style="color: #808000; font-size: 14px;">mouseover</strong>，<span style="font-size: 14px;"><strong><span style="color: #808000;">mouseout</span> </strong></span>两个事件，并且在这两个事件中，表示着不同的意思。</p><p><span style="color: #808000;"><strong>mouseover</strong></span>中，relatedTarget表示鼠标指针移到目标节点上时所离开的那个节点。</p><p><span style="color: #808000;"><strong>mouseout</strong></span>中，relatedTarget表示离开目标时，鼠标指针进入的节点。</p><p>说再多，不如举个栗子。</p><p>先看看<span style="color: #808000; font-size: 14px;"><strong>mouseover</strong></span></p><p><input id="mouseover" type="text" /><a>从我这移到文本框,试试看</a></p><p>再看看<span style="color: #808000; font-size: 14px;"><strong>mouseout</strong></span></p><p><input id="mouseout" type="text" /><a>从文本框移到我这,试试看</a></p><p>需要说明的是，<span style="color: #808000; font-size: 14px;"><strong>pointerover</strong></span>，<span style="color: #808000; font-size: 14px;"><strong>pointerout</strong></span>事件也可以使用这个属性，但是由于这两个兼容性不是很好，所以就不举例子了。</p><p><script>// <![CDATA[
document.getElementById('mouseover').onmouseover = function(event){
    alert(event.relatedTarget.tagName);
};
document.getElementById('mouseout').onmouseout = function(event) {
    alert(event.relatedTarget.tagName);
};
// ]]]]><![CDATA[></script></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date><![CDATA[2016-05-23 00:25:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-22 16:25:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-event-relatedtarget]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[11798]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[js event.relatedTarget - 大熊]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[js event.relatedTarget - 大熊]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[33]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[主要简述一下relatedTarget的作用]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>input去除点击阴影</title>
		<link>http://www.frontend.ren/2016/06/04/input-remove-shadow/</link>
		<pubDate>Sat, 04 Jun 2016 09:50:34 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[<p>在移动端，点击input文本框时，会出现一坨阴影，好丑的说。</p>
<p>好吧，看看如何来消除吧。<!--more--></p>
<h4>方法一</h4>
<p><code lang="css">
input {
  -webkit-tap-highlight-color:rgba(255,255,255,0);
}</code></p>
<h4>方法二</h4>
<p><code lang="css">
input {
  -webkit-appearance: none;
}
</code></p>
<h4>方法三</h4>
<p><code lang="css">
input {
  border: 0;
}</code></p>
<p><span style="font-size: 14px;"><strong><span style="color: #808000;">来瞅瞅这些属性具体是啥意思</span></strong></span>。<a title="-webkit-tap-highlight-color" href="http://www.css88.com/webkit/-webkit-line-clamp/">戳这里</a></p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date><![CDATA[2016-06-04 17:50:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-04 09:50:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[input-remove-shadow]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css3"><![CDATA[css3]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[6250]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[input去除点击阴影]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[input去除点击阴影]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[在ios中, 移除input的点击阴影的效果]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>前端性能优化之字体@font-face</title>
		<link>http://www.frontend.ren/2016/06/23/performance-about-font-face/</link>
		<pubDate>Thu, 23 Jun 2016 15:05:53 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[<h4><strong>@font-face</strong></h4><p>使用<strong><span style="color: #808000; font-size: 14px;">@font-face</span></strong>，可以定义某个特定字体资源的位置，其样式特征用于网页。<!--more--></p><h4><strong>用法示例</strong></h4>
<code lang="css">
@font-face {
 font-family: 'Awesome Font';
 font-style: italic;
 font-weight: 400;
 src: local('Awesome Font Italic'),
 url('/fonts/awesome-i.woff2') format('woff2'), 
 url('/fonts/awesome-i.woff') format('woff'),
 url('/fonts/awesome-i.ttf') format('ttf'),
 url('/fonts/awesome-i.eot') format('eot');
}
</code><h4><strong>使用细节</strong></h4><p><strong><span style="color: #000000;">①.</span></strong> 使用<strong><span style="color: #808000; font-size: 14px;">local()</span></strong>指令，我们可以引用、加载和使用本地安装的字体</p><p><span style="color: #000000;"><strong>②.</strong></span> 使用<strong><span style="color: #808000; font-size: 14px;">url()</span></strong>指令，我们可以加载外部字体，并且该指令可以包含一个可选的<span style="font-size: 14px;"><strong><span style="color: #808000;">format()</span></strong></span>提示，指示由提供的网址所引用的字体的格式</p><p><strong><span style="color: #000000;">③.</span> </strong>对大型 <span style="color: #808000; font-size: 14px;"><strong>unicode</strong> </span>字体进行子集内嵌以提高性能：使用<span style="font-size: 14px;"><strong><span style="color: #808000;"> unicode-range</span></strong></span> 子集内嵌，并为较旧的浏览器提供手动子集内嵌回退</p><p><strong><span style="color: #000000;">④.</span></strong> 减少风格字体变体的数量以改进网页和文本呈现性能</p><h4><strong>字体格式</strong></h4><p>现在网络上使用的字体容器格式有四种：<span style="font-size: 14px; color: #333333;"><strong>EOT</strong></span>、<span style="font-size: 14px; color: #333333;"><strong>TTF</strong></span>、<span style="font-size: 14px; color: #333333;"><strong>WOFF </strong></span>和 <span style="font-size: 14px; color: #333333;"><strong>WOFF2</strong></span>。遗憾的是，无论选择的范围有多宽，都不会有在所有旧浏览器和新浏览器上都可以使用的单一通用格式：<span style="font-size: 14px; color: #333333;"><strong>EOT </strong></span>仅 <span style="font-size: 14px;"><strong><span style="color: #808000;">IE</span></strong></span> 支持，<span style="font-size: 14px; color: #333333;"><strong>TTF </strong></span>具有 部分 <strong><span style="color: #808000;">IE</span> </strong>支持，<span style="font-size: 14px; color: #333333;"><strong>WOFF </strong></span>的支持最广泛，但 它在许多较旧的浏览器中不可用，<span style="color: #333333;"><strong><span style="font-size: 14px;">WOFF 2.0</span></strong></span> 支持 对于许多浏览器来说还未实现。</p><ul><li>将<span style="color: #333333;"> <strong><span style="font-size: 14px;">WOFF 2.0</span></strong> </span>变体提供给支持它的浏览器</li><li>将 <span style="font-size: 14px; color: #333333;"><strong>WOFF</strong> </span>变体提供给大多数浏览器</li><li>将 <strong><span style="font-size: 14px; color: #808080;"><span style="color: #333333;">TTF</span> </span></strong>变体提供给旧 <span style="font-size: 14px;"><strong><span style="color: #808000;">Android</span></strong></span>（4.4 版以下）浏览器</li><li>将 <span style="font-size: 14px; color: #333333;"><strong>EOT </strong></span>变体提供给旧 <span style="font-size: 14px;"><strong><span style="color: #808000;">IE</span></strong></span>（IE9 之下）浏览器</li></ul><p>还有一种<span style="font-size: 14px; color: #333333;"><strong>SVG</strong></span>字体，因为兼容性和用途有限，可以忽略不提。</p><h4><strong>压缩字体大小</strong></h4><p>一般情况下，可以在服务器端配置GZIP压缩，可以有效的减小字体文件大小。</p><p>可以考虑使用 <span style="font-size: 14px;"><strong><span style="color: #333333;">Zopfli</span> </strong></span>压缩 处理 <strong><span style="font-size: 14px; color: #333333;">EOT</span></strong>、<strong><span style="font-size: 14px; color: #333333;">TTF </span></strong>和 <strong><span style="font-size: 14px; color: #333333;">WOFF </span></strong>格式。<strong><span style="color: #333333; font-size: 14px;">Zopfli </span></strong>是一个 <strong><span style="font-size: 14px; color: #333333;">zlib </span></strong>兼容压缩工具，该工具通过 <strong><span style="color: #333333; font-size: 14px;">gzip </span></strong>提供 <strong><span style="color: #333333; font-size: 14px;">~5%</span></strong> 的文件大小缩减。</p><h4><strong>使用Unicode-range 子集内嵌</strong></h4><p>使用 <strong><span style="color: #808000; font-size: 14px;">unicode-range</span></strong> 描述符，我们可以指定一个范围值的逗号分隔列表，其中每个可以采用以下三种不同的形式之一：</p><ul><li>单一代码点（例如 U+416)</li><li>间隔范围（例如 U+400-4ff）：指示范围的开始代码点和结束代码点</li><li>通配符范围（例如 U+4??): ? 字符指示任何十六进制数字</li></ul>
<code lang="css">
@font-face {
 font-family: 'Awesome Font';
 font-style: normal;
 font-weight: 400;
 src: local('Awesome Font'),
 url('/fonts/awesome-l.woff2') format('woff2'), 
 url('/fonts/awesome-l.woff') format('woff'),
 url('/fonts/awesome-l.ttf') format('ttf'),
 url('/fonts/awesome-l.eot') format('eot');
 unicode-range: U+000-5FF; /* Latin glyphs */
}

@font-face {
 font-family: 'Awesome Font';
 font-style: normal;
 font-weight: 400;
 src: local('Awesome Font'),
 url('/fonts/awesome-jp.woff2') format('woff2'), 
 url('/fonts/awesome-jp.woff') format('woff'),
 url('/fonts/awesome-jp.ttf') format('ttf'),
 url('/fonts/awesome-jp.eot') format('eot');
 unicode-range: U+3000-9FFF, U+ff??; /* Japanese glyphs */
}</code><p>通过使用 <strong><span style="color: #808000; font-size: 14px;">unicode range</span></strong> 子集以及为字体的每种样式变体使用单独的文件，我们可以定义一个复合字体系列，该系列下载起来更快、更有效 - 访问者将仅下载变体及变体需要的子集，而不会强制他们下载他们可能从未在网页上看到或使用过的子集。</p><p>在浏览器不支持<span style="font-size: 14px;"><strong><span style="color: #808000;">unicode range</span></strong></span>的情况下，浏览器会下载所有字体。</p><h4><strong>优化加载和呈现</strong></h4><p>字体的延迟加载可能会延迟文本呈现，主要原因是由于<strong><span style="font-size: 14px; color: #808000;">浏览器必须 构造呈现树</span></strong>，这依赖于 <span style="color: #333333; font-size: 14px;"><strong>DOM</strong> </span>和 <span style="font-size: 14px; color: #333333;"><strong>CSSOM</strong> </span>树，在此之后，它将知道它将需要哪些字体资源来呈现文本。因此，会将字体请求很好地延迟到其他关键资源之后，并且在取回资源之前可能会阻止浏览器呈现文本。</p><p><img id="__wp-temp-img-id" title="" src="/wp-content/uploads/images/font-crp.png" alt="font-crp" width="1053" height="400" /></p><ol><li>浏览器请求 <span style="font-size: 14px; color: #808000;"><strong><span style="color: #333333;">HTML</span> </strong></span>文档</li><li>浏览器开始解析 <span style="color: #333333;"><strong><span style="font-size: 14px;">HTML</span></strong> </span>响应并构造 <span style="color: #333333;"><strong><span style="font-size: 14px;">DOM</span></strong></span></li><li>浏览器发现 <span style="color: #333333;"><strong><span style="font-size: 14px;">CSS</span></strong></span>、<span style="color: #333333;"><strong><span style="font-size: 14px;">JS</span> </strong></span>和其他资源并分派请求</li><li>收到所有 <span style="font-size: 14px; color: #333333;"><strong>CSS </strong></span>内容之后，浏览器会立即构造 <span style="color: #333333;"><strong><span style="font-size: 14px;">CSSOM</span></strong></span>，并将其与 <span style="color: #333333;"><strong><span style="font-size: 14px;">DOM</span> </strong></span>树组合到一起来构造呈现树<ul><li>在呈现树指明需要哪些字体变体来呈现网页上的指定文本之后，会立即分派字体请求</li></ul></li><li>浏览器执行布局，并将内容绘制到屏幕上<ul><li>如果字体还不可用，浏览器可能不会呈现任何文本像素</li><li>字体可用之后，浏览器会立即绘制文本像素</li></ul></li></ol><p>网页内容的首次绘制（在构建呈现树之后可以很快完成）和字体资源请求之间的’比赛’产生了’空白文本问题’，这种情况下<strong><span style="color: #808000; font-size: 14px;">浏览器可能会呈现网页布局而忽略任何文本</span></strong>。在不同浏览器之间实际的行为会有所不同：</p><ul style="list-style-type: disc;"><li><span style="font-size: 14px;"><strong><span style="color: #333333;">Safari</span> </strong></span>在字体下载完成之前会暂停文本呈现。</li><li><strong><span style="color: #333333; font-size: 14px;">Chrome </span></strong>和 <span style="font-size: 14px;"><strong><span style="color: #333333;">Firefox</span> </strong></span>会暂停字体呈现最多 <strong><span style="font-size: 14px; color: #808000;">3</span></strong> 秒钟，<span style="font-size: 14px;"><strong><span style="color: #808000;">3</span></strong></span> 秒钟之后它们会使用一种备用字体，并且字体下载完成之后，它们会立即使用下载的字体重新呈现一次文本。</li><li>如果请求字体还不可用，<strong><span style="color: #333333; font-size: 14px;">IE </span></strong>会立即使用备用字体呈现，并在字体下载完成之后马上重新呈现。</li></ul><p><strong>使用字体加载 API 优化字体呈现</strong></p>
<code lang="css">
var font = new FontFace("Awesome Font", "url(/fonts/awesome.woff2)", {
  style: 'normal', 
  unicodeRange: 'U+000-5FF', weight: '400'
});

font.load(); /* don't wait for render tree, initiate immediate fetch! */

font.ready().then(function() {
/* apply the font (which may rerender text and cause a page reflow)
   once the font has finished downloading */
document.fonts.add(font);
document.body.style.fontFamily = "Awesome Font, serif";

/* OR... by default content is hidden, and rendered once font is available */
var content = document.getElementById("content");
content.style.visibility = "visible";
});

</code><p>通过这种方式可以定义和操纵 CSS 字体外观，跟踪其下载进度，并覆盖其默认延迟加载行为。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date><![CDATA[2016-06-23 23:05:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-23 15:05:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[performance-about-font-face]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[post_views_count]]></wp:meta_key>
			<wp:meta_value><![CDATA[155]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[web performance @font-face]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[web performance @font-face]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[aside_options]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:12:"i_post_music";s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[%e5%89%8d%e7%ab%af%e6%80%a7%e8%83%bd%e4%bc%98%e5%8c%96%e4%b9%8bfont-face]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>前端性能优化之不执行css和js的情况下预加载文件</title>
		<link>http://www.frontend.ren/2016/06/27/preload-cssjs-without-execution/</link>
		<pubDate>Mon, 27 Jun 2016 15:07:56 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>引言</h4><p>前端优化中，性价比最好的应该算是静态资源的合并压缩了。既能减少http请求数量，又能减少响应大小。如果能做到预缓存这些静态资源，那简直不要太爽了。<!--more--></p><p>但有时候在缓存静态资源的时候，会遇到css和js解析和执行的尴尬。那如果做到不执行的同时让css和js缓存呢。看看下面的做法，也许会对你有所帮助。</p><h4>先来看看css要做什么处理</h4><p>我们需要用到link标签里面的一属性: media,这个属性规定了该css文件显示在什么设备上。那么我们可以这样写：</p><code lang="html">
<link rel="stylesheet" type="text/css" href="app.css" media="none"/>
</code><h4>再来看看JS要怎么做</h4><p>js需要采用动态添加object元素的方式，具体如下：</p><code lang="javascript">
var o = document.createElement("object");
o.data = "jquery.js"
document.body.appendChild(o);</code><p>需要注意的是，在没有设置样式的情况下，加载的object元素会出现在页面上，需要视情况设置其width,height,display等样式。但<span style="color: #ff0000;">不能设置display:none</span>，否则将无法缓存js文件。</p><h4>为什么这样做</h4><p>这样做的目的是为了满足场景下预缓存一些过大的js的情况。假设加载的js问价存在依赖，正常的方式会在加载的同时执行js，导致报错。这样就无法做到缓存的目的。</p><p>在用create object element的方式后，假设你的server已经做过cache-control,max-age,ETag这些设置。那么当下次再次请求这个文件时，就不再是200，而是from cache.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date><![CDATA[2016-06-27 23:07:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-27 15:07:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[preload-cssjs-without-execution]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[preload-cssjs-without-execution]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[preload-cssjs-without-execution]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[42]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[preload-cssjs-without-execution]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>聊聊web性能调优的那些事</title>
		<link>http://www.frontend.ren/2016/06/28/talk-about-web-front-end-performance/</link>
		<pubDate>Tue, 28 Jun 2016 14:28:03 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=203</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>引言</h4><p>写这篇博客的目的，主要是对最近一些web性能优化方面的经验做个总结。可能会不够全面，日后会不断补充完整。<!--more--></p><h4>性能调优</h4><p>在性能优化中，静态资源是始终绕不过的，因为性价比高。我们只需用些简单有效的手段，就能使性能大大提升。而性能调优的准则，可以参考谷歌和YSlow等等一些黄金准则。</p><ul style="list-style-type: circle;"><ul style="list-style-type: circle;"><li><strong>css和js处理<br /> </strong><ol><li>按模块合并压缩js,css文件，将主框架独立合并压缩。</li><li>将css的link写在header内，js写在body尾部。也可以采用defer属性和其他手段来异步加载。因为浏览器是从上而下解析页面的，并且加载和渲染css的同时，是会阻碍后面的加载，所以可以考虑先加载后渲染的方式<code lang="html">
<link rel="stylesheet" href="app.css" media="none"/>
<script type="text/css">
  if(isCssLoaded){ css.media="all";}
</script>
//这里只是提供思路，具体代码需要自行完善</code></li><li>视情况可以考虑将js和css文件<strong><span style="color: #808000;">写入html</span></strong>中，压缩html文件</li><li>预缓存组件</li></ol></li><li><strong>图片处理<br /> </strong><ol><li>将能够合并的图片做成<span style="color: #808000;"><strong>雪碧图</strong></span>。</li><li>将小图片(建议小于10k)转成<span style="color: #808000;">base64</span>位格式。</li><li>JPG格式图片是通用的选择，有条件不考虑兼容性问题的可以尝试WebP。</li><li>用动画的方式来代替图片的效果</li></ol></li><li><strong>其他处理</strong><ol><li>采用CDN加速，视情况烧钱。</li><li>采用静态资源服务器，同一domain下，发送的http请求会携带cookies，所以你懂的。</li><li>采用gzip压缩，效果杠杠的。</li><li>服务器端缓存策略，在服务器端设置cache-control, max-age和ETag, 因为cache-control是http1.1出现的，所以为了兼容性考虑，请把ETag带上。</li><li>在设置服务端缓存之后，可以在前端通过预加载的手段，做到预缓存一些大的js或者css文件。</li></ol></li></ul></ul><h4>工具篇</h4><ul style="list-style-type: disc;"><li>YSlow<br />强大的性能分析工具，上手容易，调优必备。</li><li>webpagetest<br />在线测试性能的网站，谁用谁知道。</li><li>Fiddler<br />用过的人才知道它的好。</li></ul><p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date><![CDATA[2016-06-28 22:28:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-28 14:28:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[talk-about-web-front-end-performance]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="performance"><![CDATA[performance]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[web性能优化 大熊]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[web性能优化 大熊]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[27]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>js之length故事知多少</title>
		<link>http://www.frontend.ren/2016/07/13/how-much-you-know-about-length-in-js/</link>
		<pubDate>Wed, 13 Jul 2016 15:59:04 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>String.length</h4><p>length属性会返回字符编码单位的数量。在js中字符串使用UTF-16编码，所以呢一个16比特的编码单位表示大部分常见的字符，也有使用两个单位表示不常见的字符。因此length返回值可能与字符实际数量不符。</p><p>而<span style="color: #808000;"><strong><span style="font-size: 14px;">String.length</span></strong></span>返回1。<!--more--></p>
<code lang="javascript">
console.log("\\".length) //  1
console.log("".length) //  0
console.log("1234".length) //  4
console.log(String.length) //  1
</code><h4>Function.length</h4><p>length属性返回function的形参个数。同上一样<strong><span style="font-size: 14px; color: #808000;">Function.length</span></strong>也是返回1。</p><p>length属性 <span style="color: #808000; font-size: 14px;"><strong>Writable</strong></span>: false, <strong><span style="font-size: 14px; color: #808000;">Enumerable</span></strong>: false, <strong><span style="font-size: 14px; color: #808000;">Configurable</span></strong>: true.</p><code lang="javascript">
console.log(Function.length) //  1
console.log( (function(a,b){}).length ) //  2
console.log( (function(){}).length ) //  0
</code><h4>arguments.length</h4><p>length返回function实参的个数。</p><p>需要注意的是arguments是<strong><span style="color: #808000;">类数组</span></strong>对象而并非数组。</p><code lang="javascript">
function isArguments() {
  return "callee" in arguments;
}

function toArray(arg) {
  return [].slice.call(arg);
}</pre><pre>function test(a, b) {
  console.log(arguments.length);
}
test(); // 0
test(1); // 1</code><h4>Array.length</h4><p>length返回数组中元素个数。同样的<span style="color: #808000; font-size: 14px;"><strong>Array.length</strong></span>为1。</p><p>length属性 <span style="color: #808000; font-size: 14px;"><strong>Writable</strong></span>: true, <strong><span style="font-size: 14px; color: #808000;">Enumerable</span></strong>: false, <strong><span style="font-size: 14px; color: #808000;">Configurable</span></strong>: false.</p><p>writeable为true意味着你可以通过改变length长度来做到截断数组。</p><code lang="javascript">
console.log(Array.length) // 1
console.log([1,2,3].length) // 3
var arr = [1,2,3];
arr.length = 2;
console.log(arr) // [1,2]</code><h4>length的取值范围</h4><p>length的值是一个0-2<sup>32</sup>-1的整数。</p>
<code lang ="javascript">
console.log(new Array(Math.pow(2,32))) // Error...
</code><p>那么如何判断一个数是一个合法的length呢</p><code lang="javascript">
function isLength(n) {
  return n > 0 &&; n%1 == 0 && n <= Math.pow(2,32) - 1;
}</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date><![CDATA[2016-07-13 23:59:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-13 15:59:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-much-you-know-about-length-in-js]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[js之length故事知多少]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[js之length故事知多少]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
			<wp:meta_value><![CDATA[本文主要介绍length的一些基本用法和技巧。]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.152.132.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-07-26 09:37:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-07-26 01:37:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最后一部分，判断length是否合法的意义是什么呢？]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1469497027.948564052581787109375;s:5:"event";s:11:"check-error";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1482549115.7486240863800048828125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"timluo";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[timluo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1664311406@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.frontend.ren</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[101.245.162.69]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-12-24 11:11:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-12-24 03:11:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[极端情况，判断length是否合法]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>8</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_error]]></wp:meta_key>
				<wp:meta_value><![CDATA[1482549119]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1482549119.7345130443572998046875;s:5:"event";s:11:"check-error";s:4:"user";s:6:"timluo";s:4:"meta";a:1:{s:8:"response";s:7:"invalid";}}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>如何实现一个翻译功能的chrome扩展程序</title>
		<link>http://www.frontend.ren/?p=261</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=261</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>引言</h4><p>最近抽空写了个基于有道翻译接口的chrome扩展程序，功能简单实用，感觉还不错，就总结一二。</p><h4>准备</h4><p>在开始之前，你需要知道chrome扩展程序是什么，如何写一个简单的chrome扩展程序。你可以看看这个<a title="chrome扩展开发文档(中文)" href="http://open.chrome.360.cn/extension_dev/overview.html">chrome扩展开发文档(中文)</a>，有能力的可以看看这个<a title="chrome扩展开发文档(官网)" href="https://developer.chrome.com/extensions/api_index.html">chrome扩展开发文档(官网)</a></p><p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date><![CDATA[2016-07-25 23:15:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>window.opener和window.close</title>
		<link>http://www.frontend.ren/2016/07/25/window-opener-and-window-close/</link>
		<pubDate>Mon, 25 Jul 2016 14:30:40 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=248</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>引言</h4>
<p>  今天逛了下虎牙直播，无意间点了第三方登录，登录成功后第三方的新tab页自动关闭，直播页面刷新。顿时，觉得挺有意思的，然后自己做了个简单实现。<!--more--></p>
<h4>热身</h4>
<ul>
	<li><strong>window.close</strong><br />
 方法 close() 将关闭有 window 指定的顶层浏览器窗口。某个窗口可以通过调用 self.close() 或只调用 close() 来关闭其自身。<br />
 只有通过 JavaScript 代码打开的窗口才能够由 JavaScript 代码关闭。这阻止了恶意的脚本终止用户的浏览器。</li>
	<li><strong>window.opener<br />
 </strong>opener 属性是一个可读可写的属性，可返回对创建该窗口的 Window 对象的引用。<br />
 opener 属性非常有用，创建的窗口可以引用创建它的窗口所定义的属性和函数。<strong><br />
 </strong></li>
</ul>
<h4>牛刀小试</h4>
<p>假设在A页面点击链接打开了B页面，B页面可以这样做</p>
<p><code>window.opener.location.reload(); 
window.close();</code></p>
<p>需要注意的是跨域的问题，也就是说如果A是一个http而B是一个https网站，直接这样子是不行的。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>248</wp:post_id>
		<wp:post_date><![CDATA[2016-07-25 22:30:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-07-25 14:30:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[window-opener-and-window-close]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%96%87%e7%ab%a0"><![CDATA[技术文章]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[window.opener和window.close]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[window.opener和window.close]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LeetCode - Two Sum</title>
		<link>http://www.frontend.ren/2017/03/08/leetcode-two-sum/</link>
		<pubDate>Tue, 07 Mar 2017 16:27:32 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<p><b>Question:</b></p>
<p><span style="font-size: 14px;">Given an array of integers, return <b>indices</b> of the two numbers such that they add up to a specific target.<br />
 </span><span style="font-size: 14px;">You may assume that each input would have <b><i>exactly</i></b> one solution, and you may not use the <i>same</i> element twice.</span></p>
<p><span style="font-size: 14px;"><b>Example:</b><br />
 </span></p>
<pre>Given nums = [2, 7, 11, 15], target = 9,
Because nums[<b>0</b>] + nums[<b>1</b>] = 2 + 7 = 9,
return [<b>0</b>, <b>1</b>].</pre>
<p><span style="font-size: 14px;"><b>Solution:</b></span></p>
<p>题目大概意思是从一个整数数组中，找出两个数之和等于给定的数，并返回这两个数的下标。</p>
<p>题目很简单，暴力点两个for循环就能解决问题，时间复杂度O(n<sub>2</sub>)</p>
<p><code lang="javascript"> 
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    var l = nums.length, x, y;
    
    for(x = 0; x < l - 1; x++) {
        for(y = x + 1; y <= l - 1; y++) {
            if(nums[x] + nums[y] == target) {
                return [x, y];
            }
        }
    }
};</code></p>
<p>仔细的想想的话, 还是能降到O(n)的</p>
<p><code lang="javascript">
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    var l = nums.length,
        arr = [], i, j;
    
    for(i = 0; i < l; i++) {
        j = arr.indexOf(target - nums[i]);

        if( j != -1) return [i, j];

        arr.push(nums[i]);
    }
};
</code></p>
<p>虽然复杂度降下来了，但是代码还能继续优化一下，用对象的方式来取代数组的indexOf，这样性能更佳</p>
<code lang="javascript">
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    var o = {}, j, i, num;
    
    for(i = nums.length; i--;) {
        num = nums[i];
        j = o[target - num];

        if( j > -1) return [i, j];

        o[num] = i;
    }
};
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date><![CDATA[2017-03-08 00:27:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-07 16:27:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[leetcode-two-sum]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="leetcode"><![CDATA[LeetCode]]></category>
		<category domain="post_tag" nicename="leetcode"><![CDATA[LeetCode]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[LeetCode Two Sum]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[LeetCode Two Sum]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LeetCode - Add Two Numbers</title>
		<link>http://www.frontend.ren/2017/03/09/leetcode-add-two-numbers/</link>
		<pubDate>Wed, 08 Mar 2017 17:18:42 +0000</pubDate>
		<dc:creator><![CDATA[timluo]]></dc:creator>
		<guid isPermaLink="false">http://www.frontend.ren/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[<p><b>Question:</b></p>
<p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>
<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>
<p><span style="font-size: 14px;"><b>Example:</b><br />
 </span></p>
<pre><strong>Input:</strong> (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)
<strong>Output:</strong> 7 -&gt; 0 -&gt; 8
</pre>
<p><span style="font-size: 14px;"><b>Solution:</b></span></p>
<p>给定两个非空链表表示两个非负整数，数字以倒序的方式存储，且每个节点包含一个数字，两数相加返回一个新的链表</p>
<p>假定两个数的第一位不为零，除其本身为零外。</p>
<p>根据题目给出的前置条件ListNode对象，可以看出</p>
<code lang="javascript">
//[2,4,3]等价于
new function(){ 
    this.val = 2;
    this.next = new function() {
        this.val = 4;
        this.next = function() {
            this.val = 3;
            this.next = null;
        }
    }
}
</code>
<p>有几个地方需要注意的是
1. 两个链表长度可能不同
2. 满10需要进位
3. 返回的结果也需要是ListNode型
</p>
<p>利用递归解题</p>
<code lang="javascript">
/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2, carry) {
    var list,sum;
    
    sum = l1.val + l2.val + (carry || 0)
    list = new ListNode(sum % 10);
    carry = sum /10 >>> 0;
    
    if(l1.next || l2.next || carry == 1 ) {
        list.next = addTwoNumbers(l1.next || new ListNode(0),
            l2.next || new ListNode(0), carry);
    }
    return list;
};
</code>
<p>不重新创建新的对象，使用原有的对象</p>
<code lang="javascript">
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    var sum;
    var itera = function (l1, l2, carry) {
        if(!l1 && !l2 && !carry) return;
        
        sum = l1.val + l2.val + carry;
        l1.val = sum % 10 ;
        carry = sum / 10 >>> 0;
        
        if(!l1.next && (l2.next || carry)) {
            l1.next = new ListNode(0);
        }
        
        if(!l2.next && (l1.next || carry)) {
            l2.next = new ListNode(0);
        }
        
        return itera(l1.next, l2.next, carry);
    }
    
    itera(l1, l2, 0);
 
    return l1;
};
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date><![CDATA[2017-03-09 01:18:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2017-03-08 17:18:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[leetcode-add-two-numbers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="leetcode"><![CDATA[LeetCode]]></category>
		<category domain="post_tag" nicename="leetcode"><![CDATA[LeetCode]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
			<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
			<wp:meta_value><![CDATA[LeetCode Add Two Numbers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
			<wp:meta_value><![CDATA[LeetCode Add Two Numbers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
